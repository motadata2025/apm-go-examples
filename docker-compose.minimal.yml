# =============================================================================
# APM Examples - Minimal Infrastructure Only
# =============================================================================
# Provides ONLY the essential infrastructure: PostgreSQL, MySQL, Kafka
# Your Go applications run natively on the host machine
# Usage: docker-compose -f docker-compose.minimal.yml up -d

version: '3.8'

networks:
  apm-infra:
    driver: bridge

volumes:
  postgres_data:
  mysql_data:
  kafka_data:
  zookeeper_data:

services:
  # =============================================================================
  # Database Services
  # =============================================================================
  
  postgres:
    image: postgres:15-alpine
    container_name: apm-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: testuser
      POSTGRES_PASSWORD: Test@1234
      POSTGRES_DB: testdb
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/postgres-init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - apm-infra
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U testuser -d testdb"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  mysql:
    image: mysql:8.0
    container_name: apm-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: rootpass
      MYSQL_DATABASE: testdb
      MYSQL_USER: testuser
      MYSQL_PASSWORD: Test@1234
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./scripts/mysql-init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - apm-infra
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-prootpass"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    command: --default-authentication-plugin=mysql_native_password

  # =============================================================================
  # Message Queue Services
  # =============================================================================

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: apm-zookeeper
    restart: unless-stopped
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_SYNC_LIMIT: 2
    ports:
      - "2181:2181"
    volumes:
      - zookeeper_data:/var/lib/zookeeper/data
    networks:
      - apm-infra
    healthcheck:
      test: ["CMD", "bash", "-c", "echo 'ruok' | nc localhost 2181"]
      interval: 10s
      timeout: 5s
      retries: 5

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: apm-kafka
    restart: unless-stopped
    depends_on:
      zookeeper:
        condition: service_healthy
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_NUM_PARTITIONS: 3
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
    volumes:
      - kafka_data:/var/lib/kafka/data
    networks:
      - apm-infra
    healthcheck:
      test: ["CMD", "kafka-broker-api-versions", "--bootstrap-server", "localhost:9092"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 15s

  # =============================================================================
  # Optional: Database Admin Tool (lightweight)
  # =============================================================================
  
  adminer:
    image: adminer:latest
    container_name: apm-adminer
    restart: unless-stopped
    ports:
      - "8080:8080"
    networks:
      - apm-infra
    profiles:
      - tools
