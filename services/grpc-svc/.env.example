# =============================================================================
# gRPC Service Environment Configuration
# =============================================================================
# Copy this file to .env and customize for your environment

# =============================================================================
# gRPC Server Configuration
# =============================================================================

# Server binding address
GRPC_SERVER_HOST=0.0.0.0
GRPC_SERVER_PORT=50051

# Service name for logging and monitoring
SERVICE_NAME=grpc-svc

# =============================================================================
# gRPC Client Configuration (for client application)
# =============================================================================

# Target gRPC server address
GRPC_CLIENT_HOST=127.0.0.1
GRPC_CLIENT_PORT=50051

# HTTP server for client triggers and management
CLIENT_HTTP_HOST=0.0.0.0
CLIENT_HTTP_PORT=8083

# =============================================================================
# TLS/Security Configuration
# =============================================================================

# Enable TLS for gRPC server
GRPC_TLS_ENABLED=false

# TLS certificate file
GRPC_TLS_CERT_FILE=/path/to/server.crt

# TLS private key file
GRPC_TLS_KEY_FILE=/path/to/server.key

# TLS CA certificate file (for mutual TLS)
GRPC_TLS_CA_FILE=/path/to/ca.crt

# Enable mutual TLS (client certificate verification)
GRPC_MTLS_ENABLED=false

# =============================================================================
# gRPC Server Options
# =============================================================================

# Maximum message size (in bytes)
GRPC_MAX_MESSAGE_SIZE=4194304

# Connection timeout
GRPC_CONNECTION_TIMEOUT=30s

# Keep alive settings
GRPC_KEEPALIVE_TIME=30s
GRPC_KEEPALIVE_TIMEOUT=5s
GRPC_KEEPALIVE_ENFORCEMENT_MIN_TIME=5s

# Maximum concurrent streams
GRPC_MAX_CONCURRENT_STREAMS=100

# =============================================================================
# Logging Configuration
# =============================================================================

# Log level (DEBUG, INFO, WARN, ERROR)
LOG_LEVEL=INFO

# Log format (json, text)
LOG_FORMAT=text

# Log output (stdout, stderr, file)
LOG_OUTPUT=stdout

# Log file path (if LOG_OUTPUT=file)
LOG_FILE=logs/grpc-svc.log

# Enable gRPC request/response logging
GRPC_LOG_REQUESTS=false

# =============================================================================
# Health Check Configuration
# =============================================================================

# Enable gRPC health checking service
HEALTH_CHECK_ENABLED=true

# Health check service name
HEALTH_SERVICE_NAME=grpc.health.v1.Health

# =============================================================================
# Reflection Configuration
# =============================================================================

# Enable gRPC server reflection (for tools like grpcurl)
GRPC_REFLECTION_ENABLED=true

# =============================================================================
# Monitoring Configuration
# =============================================================================

# Enable metrics collection
METRICS_ENABLED=true

# Metrics port (HTTP endpoint for Prometheus)
METRICS_PORT=9092

# Enable tracing
TRACING_ENABLED=false

# Tracing endpoint
TRACING_ENDPOINT=http://localhost:14268/api/traces

# =============================================================================
# Development Configuration
# =============================================================================

# Development mode
DEV_MODE=true

# Enable debug logging
DEBUG=false

# Enable gRPC debug logging
GRPC_DEBUG=false

# Hot reload for proto files
HOT_RELOAD=false

# =============================================================================
# Protocol Buffers Configuration
# =============================================================================

# Proto file directory
PROTO_DIR=api/proto

# Generated code directory
PROTO_GEN_DIR=api/proto

# =============================================================================
# Load Balancing Configuration
# =============================================================================

# Load balancing policy (round_robin, pick_first, grpclb)
LB_POLICY=round_robin

# Service discovery (for production)
SERVICE_DISCOVERY_ENABLED=false
SERVICE_DISCOVERY_URL=consul://localhost:8500

# =============================================================================
# Rate Limiting Configuration
# =============================================================================

# Enable rate limiting
RATE_LIMIT_ENABLED=false

# Requests per second
RATE_LIMIT_RPS=100

# Burst size
RATE_LIMIT_BURST=200

# =============================================================================
# Circuit Breaker Configuration
# =============================================================================

# Enable circuit breaker
CIRCUIT_BREAKER_ENABLED=false

# Failure threshold
CIRCUIT_BREAKER_THRESHOLD=5

# Timeout
CIRCUIT_BREAKER_TIMEOUT=30s

# =============================================================================
# Production Configuration
# =============================================================================

# Production server address
# PROD_GRPC_SERVER_HOST=0.0.0.0
# PROD_GRPC_SERVER_PORT=50051

# Production TLS settings
# PROD_GRPC_TLS_ENABLED=true
# PROD_GRPC_TLS_CERT_FILE=/etc/ssl/certs/grpc-server.crt
# PROD_GRPC_TLS_KEY_FILE=/etc/ssl/private/grpc-server.key

# Production connection limits
# PROD_GRPC_MAX_CONCURRENT_STREAMS=1000
# PROD_GRPC_MAX_MESSAGE_SIZE=16777216

# =============================================================================
# Testing Configuration
# =============================================================================

# Test server address (for integration tests)
TEST_GRPC_SERVER=localhost:50051

# Test timeout
TEST_TIMEOUT=10s

# =============================================================================
# Notes
# =============================================================================
# 1. Copy this file to .env and customize values
# 2. For production, enable TLS and use proper certificates
# 3. Use grpcurl for testing: grpcurl -plaintext localhost:50051 list
# 4. Enable reflection for development, disable for production
# 5. Configure proper load balancing and service discovery for production
# 6. Monitor gRPC metrics for performance optimization
