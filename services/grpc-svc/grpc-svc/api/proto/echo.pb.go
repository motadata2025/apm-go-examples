// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v3.21.12
// source: api/proto/echo.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SayRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Msg           string                 `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SayRequest) Reset() {
	*x = SayRequest{}
	mi := &file_api_proto_echo_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SayRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SayRequest) ProtoMessage() {}

func (x *SayRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_echo_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SayRequest.ProtoReflect.Descriptor instead.
func (*SayRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_echo_proto_rawDescGZIP(), []int{0}
}

func (x *SayRequest) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type SayResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Msg           string                 `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SayResponse) Reset() {
	*x = SayResponse{}
	mi := &file_api_proto_echo_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SayResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SayResponse) ProtoMessage() {}

func (x *SayResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_echo_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SayResponse.ProtoReflect.Descriptor instead.
func (*SayResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_echo_proto_rawDescGZIP(), []int{1}
}

func (x *SayResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type CountRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	From          int32                  `protobuf:"varint,1,opt,name=from,proto3" json:"from,omitempty"`
	To            int32                  `protobuf:"varint,2,opt,name=to,proto3" json:"to,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CountRequest) Reset() {
	*x = CountRequest{}
	mi := &file_api_proto_echo_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountRequest) ProtoMessage() {}

func (x *CountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_echo_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountRequest.ProtoReflect.Descriptor instead.
func (*CountRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_echo_proto_rawDescGZIP(), []int{2}
}

func (x *CountRequest) GetFrom() int32 {
	if x != nil {
		return x.From
	}
	return 0
}

func (x *CountRequest) GetTo() int32 {
	if x != nil {
		return x.To
	}
	return 0
}

type CountTick struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         int32                  `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CountTick) Reset() {
	*x = CountTick{}
	mi := &file_api_proto_echo_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CountTick) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountTick) ProtoMessage() {}

func (x *CountTick) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_echo_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountTick.ProtoReflect.Descriptor instead.
func (*CountTick) Descriptor() ([]byte, []int) {
	return file_api_proto_echo_proto_rawDescGZIP(), []int{3}
}

func (x *CountTick) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

var File_api_proto_echo_proto protoreflect.FileDescriptor

const file_api_proto_echo_proto_rawDesc = "" +
	"\n" +
	"\x14api/proto/echo.proto\x12\aecho.v1\"\x1e\n" +
	"\n" +
	"SayRequest\x12\x10\n" +
	"\x03msg\x18\x01 \x01(\tR\x03msg\"\x1f\n" +
	"\vSayResponse\x12\x10\n" +
	"\x03msg\x18\x01 \x01(\tR\x03msg\"2\n" +
	"\fCountRequest\x12\x12\n" +
	"\x04from\x18\x01 \x01(\x05R\x04from\x12\x0e\n" +
	"\x02to\x18\x02 \x01(\x05R\x02to\"!\n" +
	"\tCountTick\x12\x14\n" +
	"\x05value\x18\x01 \x01(\x05R\x05value2{\n" +
	"\vEchoService\x120\n" +
	"\x03Say\x12\x13.echo.v1.SayRequest\x1a\x14.echo.v1.SayResponse\x12:\n" +
	"\vStreamCount\x12\x15.echo.v1.CountRequest\x1a\x12.echo.v1.CountTick0\x01B\x1aZ\x18grpc-svc/api/proto;protob\x06proto3"

var (
	file_api_proto_echo_proto_rawDescOnce sync.Once
	file_api_proto_echo_proto_rawDescData []byte
)

func file_api_proto_echo_proto_rawDescGZIP() []byte {
	file_api_proto_echo_proto_rawDescOnce.Do(func() {
		file_api_proto_echo_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_proto_echo_proto_rawDesc), len(file_api_proto_echo_proto_rawDesc)))
	})
	return file_api_proto_echo_proto_rawDescData
}

var file_api_proto_echo_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_api_proto_echo_proto_goTypes = []any{
	(*SayRequest)(nil),   // 0: echo.v1.SayRequest
	(*SayResponse)(nil),  // 1: echo.v1.SayResponse
	(*CountRequest)(nil), // 2: echo.v1.CountRequest
	(*CountTick)(nil),    // 3: echo.v1.CountTick
}
var file_api_proto_echo_proto_depIdxs = []int32{
	0, // 0: echo.v1.EchoService.Say:input_type -> echo.v1.SayRequest
	2, // 1: echo.v1.EchoService.StreamCount:input_type -> echo.v1.CountRequest
	1, // 2: echo.v1.EchoService.Say:output_type -> echo.v1.SayResponse
	3, // 3: echo.v1.EchoService.StreamCount:output_type -> echo.v1.CountTick
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_api_proto_echo_proto_init() }
func file_api_proto_echo_proto_init() {
	if File_api_proto_echo_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_proto_echo_proto_rawDesc), len(file_api_proto_echo_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_proto_echo_proto_goTypes,
		DependencyIndexes: file_api_proto_echo_proto_depIdxs,
		MessageInfos:      file_api_proto_echo_proto_msgTypes,
	}.Build()
	File_api_proto_echo_proto = out.File
	file_api_proto_echo_proto_goTypes = nil
	file_api_proto_echo_proto_depIdxs = nil
}
